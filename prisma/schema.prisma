datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgcrypto]
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

model User {
  id               String           @id @default(dbgenerated("gen_random_uuid()"))
  email            String           @unique
  password         String
  name             String // New field
  entries          Entry[]
  categories       Category[]
  recurringEntries RecurringEntry[]
  paymentTypes     PaymentType[]
  created_at       DateTime         @default(now())
  updated_at       DateTime         @updatedAt
  CostCenter       CostCenter[]
}

model Category {
  id             String           @id @default(uuid())
  name           String
  type           String
  cost_center_id String?
  cost_center    CostCenter?      @relation(fields: [cost_center_id], references: [id], onDelete: SetNull)
  user_id        String
  user           User             @relation(fields: [user_id], references: [id])
  created_at     DateTime         @default(now())
  updated_at     DateTime         @updatedAt
  entries        Entry[]
  RecurringEntry RecurringEntry[]

  @@unique([name, type, user_id])
}

model Entry {
  id              String       @id @default(dbgenerated("gen_random_uuid()"))
  amount          Float
  description     String?
  category_id     String
  user_id         String
  period          String
  payment_type_id String?
  user            User         @relation(fields: [user_id], references: [id])
  category        Category     @relation(fields: [category_id], references: [id])
  payment_type    PaymentType? @relation(fields: [payment_type_id], references: [id])
  created_at      DateTime     @default(now())
  updated_at      DateTime     @updatedAt
}

model RecurringEntry {
  id              String   @id @default(dbgenerated("gen_random_uuid()"))
  user_id         String
  category_id     String
  payment_type_id String?
  amount          Float
  description     String?
  frequency       String // "monthly", "weekly", "yearly"
  next_run        DateTime
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  user         User         @relation(fields: [user_id], references: [id])
  category     Category     @relation(fields: [category_id], references: [id])
  payment_type PaymentType? @relation(fields: [payment_type_id], references: [id])
}

model PaymentType {
  id               String           @id @default(dbgenerated("gen_random_uuid()"))
  name             String
  user_id          String
  created_at       DateTime         @default(now())
  updated_at       DateTime         @updatedAt
  entries          Entry[]
  recurringEntries RecurringEntry[]

  user User @relation(fields: [user_id], references: [id])
}

model CostCenter {
  id         String     @id @default(dbgenerated("gen_random_uuid()"))
  name       String
  user_id    String
  user       User       @relation(fields: [user_id], references: [id])
  categories Category[]
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt

  @@unique([name, user_id])
}
